import os
import asyncio
from aiohttp import web
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.webhook.aiohttp_server import setup_application

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ webhook URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –¥–æ–ª–∂–µ–Ω –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ /webhook

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ /start
async def handle_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç!")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    # –°–æ–∑–¥–∞–µ–º aiohttp –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = web.Application()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º async with –¥–ª—è Bot
    async with Bot(BOT_TOKEN) as bot:
        dp = Dispatcher()
        dp.message.register(handle_start, Command("start"))

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
        async def on_startup(app):
            await bot.set_webhook(WEBHOOK_URL)
            print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:", WEBHOOK_URL)

        async def on_shutdown(app):
            await bot.delete_webhook()
            print("üõë Webhook —É–¥–∞–ª—ë–Ω")

        app.on_startup.append(on_startup)
        app.on_shutdown.append(on_shutdown)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º aiogram –∫ aiohttp
        setup_application(app, dp, bot=bot)

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        runner = web.AppRunner(app)
        await runner.setup()
        port = int(os.getenv("PORT", 8080))  # Render —É–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–π –ø–æ—Ä—Ç
        site = web.TCPSite(runner, host="0.0.0.0", port=port)
        await site.start()

        print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")

        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
        await asyncio.Event().wait()

if __name__ == "__main__":
    asyncio.run(main())
