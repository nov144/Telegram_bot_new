import os
import asyncio
from aiohttp import web
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.webhook.aiohttp_server import setup_application

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ /start
async def handle_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç!")

async def main():
    # –°–æ–∑–¥–∞—ë–º aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = web.Application()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    BOT_TOKEN = os.getenv("BOT_TOKEN")
    WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # https://your-render-url/webhook
    PORT = int(os.getenv("PORT", 8080))

    # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ —Å–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
    async with Bot(BOT_TOKEN) as bot:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∏ —Ö–µ–Ω–¥–ª–µ—Ä
        dp = Dispatcher()
        dp.message.register(handle_start, Command("start"))

        # Webhook setup
        async def on_startup(app):
            await bot.set_webhook(WEBHOOK_URL)
            print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

        async def on_shutdown(app):
            await bot.delete_webhook()
            print("üõë Webhook —É–¥–∞–ª—ë–Ω")

        app.on_startup.append(on_startup)
        app.on_shutdown.append(on_shutdown)

        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º aiogram –∫ aiohttp
        setup_application(app, dp, bot=bot)

        # –ó–∞–ø—É—Å–∫ web-—Å–µ—Ä–≤–µ—Ä–∞
        runner = web.AppRunner(app)
        await runner.setup()
        site = web.TCPSite(runner, "0.0.0.0", PORT)
        await site.start()
        print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")

        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ (—á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è)
        await asyncio.Event().wait()

if __name__ == "__main__":
    asyncio.run(main())
