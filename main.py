import os
import asyncio
from aiohttp import web
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ /start
async def handle_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç!")

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∂–∏–≤–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
async def health(request):
    return web.Response(text="OK")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    BOT_TOKEN = os.getenv("BOT_TOKEN")
    WEBHOOK_URL = os.getenv("WEBHOOK_URL")
    PORT = int(os.getenv("PORT", 8080))

    bot = Bot(BOT_TOKEN)
    dp = Dispatcher()
    dp.message.register(handle_start, Command("start"))

    app = web.Application()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º /health —Ä—É—á–∫—É
    app.router.add_get("/health", health)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º webhook-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    setup_application(app, dp, bot=bot)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    async def on_startup(app):
        await bot.set_webhook(WEBHOOK_URL)
        print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    # –£–¥–∞–ª—è–µ–º webhook –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
    async def on_shutdown(app):
        await bot.delete_webhook()
        await bot.session.close()
        print("üõë Webhook —É–¥–∞–ª—ë–Ω")

    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", PORT)
    await site.start()

    print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    await asyncio.Event().wait()

if __name__ == "__main__":
    asyncio.run(main())
